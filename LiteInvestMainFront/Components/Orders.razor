@using LiteInvestMainFront.Data
@using LiteInvestServer.Helpers
@using System.Timers
@using LiteInvest.Entity.PlazaEntity

@implements IDisposable;

<DxGrid 
RowDoubleClick="OnRowClicked"
CssClass="dxgrid"
Data="@OrdersData"
ShowAllRows="true"
ColumnResizeMode="GridColumnResizeMode.NextColumn"
TextWrapEnabled="false"
ShowGroupPanel="false"
HighlightRowOnHover="true"
FocusedRowEnabled="true">

    <Columns>
        <DxGridDataColumn FieldName="ExchangeOrderId" Width="auto" />
        <DxGridDataColumn FieldName="SecIsin" Width="auto" />
        <DxGridDataColumn FieldName="State" Width="auto" />
        <DxGridDataColumn FieldName="Side" Width="auto" />
        <DxGridDataColumn FieldName="PriceOrder" Width="auto" />
        <DxGridDataColumn FieldName="TypeOrder" Width="auto" />
        <DxGridDataColumn FieldName="Volume" Width="auto" />
        <DxGridDataColumn FieldName="VolumeExecuted" Width="auto" />
    </Columns>

</DxGrid> 

@code {

    List<Order> OrdersData { get; set; } = new List<Order>();
    System.Timers.Timer timer;

    [Parameter]
    public ApiDataService apiDataService{ get; set; }

    protected override Task OnInitializedAsync()
    {
        StartTimer();
        return base.OnInitializedAsync();
    }

    public void Dispose()
    {
        if (timer != null)
        {
            timer.Stop();
            timer.Dispose();
        }
    }


    public async void LoadData()
    {
        var orders = await apiDataService.GetActiveOrders();

        //TODO: Апи посылает повторно один и тот же ордер. 
        //причем только первый
        if (orders != null)
        {
            Dictionary<string, Order> OrdersDictionary = new();
            foreach (var order in orders)
                OrdersDictionary[order.ExchangeOrderId] = order;

            OrdersData = OrdersDictionary.Values.ToList();
        }

        if (orders == null || orders.Count == 0)
            OrdersData.Clear();


        InvokeAsync(StateHasChanged);
    }

    public async void StartTimer()
    {
        LoadData();
        timer = Helper.CreateTimerAndStart(LoadData, 1500, true);
        timer.Start();
    }

    public async void OnRowClicked(DevExpress.Blazor.GridRowClickEventArgs e)
    {
        try
        {
            var index = e.VisibleIndex;
            await apiDataService.CancelOrder(OrdersData.ToArray()[index]);
            
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }

    }

}
